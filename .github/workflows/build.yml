name: Build FFmpeg

on:
   workflow_dispatch:

jobs:

  build-cuda-centos-docker:
    name: build in rocky linux docker with cuda
    strategy:
      matrix:
        os: ['8', '7']  # Specify CentOS versions here
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Envs
        run: |
          echo "NVENC_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/rigaya/NVEnc/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV
          echo "FFMPEG_VERSION=5.1" >> $GITHUB_ENV

      - name: Build FFmpeg
        run: |
          docker build --build-arg VER=${{ matrix.os }} --build-arg FFMPEG_VERSION=${{ env.FFMPEG_VERSION }} \
           --build-arg NVENC_VERSION=${{ env.NVENC_VERSION }} -t \
           ffmpeg:cuda-rockylinux${{ matrix.os }} -f cuda-rocky.dockerfile .

      - name: Copy Build
        run: |
          docker run --rm -v ${{ github.workspace }}/artifacts:/app/artifacts \
           -e VER=${{ matrix.os }} ffmpeg:cuda-rockylinux${{ matrix.os }} bash copyfiles.sh
          sudo chmod -R 777 ${{ github.workspace }}/artifacts/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg
          path: artifacts/*

  publish_release:
    name: Publish Release
    needs: build-cuda-centos-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ffmpeg
          path: artifacts

      - name: Set Envs
        run: |
          echo "NVENC_VERSION=$(curl -fsSLI -o /dev/null -w %{url_effective} https://github.com/rigaya/NVEnc/releases/latest | rev | cut -d '/' -f 1 | rev)" >> $GITHUB_ENV
          echo "FFMPEG_VERSION=5.1" >> $GITHUB_ENV

      - name: Delete Release
        run: gh release delete latest --cleanup-tag -y
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
      
      - name: Upload Modules to Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT }}
          tag_name: latest
          files: ${{ github.workspace }}/artifacts/**/*
          name: FFmpeg-${{ env.FFMPEG_VERSION }}-Nvencc-${{ env.NVENC_VERSION }}
          draft: false
          prerelease: false
